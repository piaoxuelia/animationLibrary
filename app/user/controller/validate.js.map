{
    "version": 3,
    "sources": [
        "../../../src/user/controller/validate.js"
    ],
    "names": [],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;kBAOO,W;;OAED,I;;;;;;cAAa,KAAK,WAAL,CAAiB,IAAjB,C;;;AAAb,W;;YACD,I;;;;;AACF,YAAK,MAAL,CAAY;AACX,cAAK,UADM;AAEX,eAAM,MAFK;AAGX,cAAK;AAHM,QAAZ;wCAKO,KAAK,OAAL,E;;;;;;;;;;;;;;;;;kBAGH,iB;;OACA,M,EACD,S,EAGA,S;;;;;AAJC,a,GAAS,E;AACV,gB,GAAY,KAAK,KAAL,CAAW,MAAX,C;;cACI,UAAU,MAAV,E;;;AAApB,cAAO,I;AAEH,gB,GAAY,KAAK,KAAL,CAAW,UAAX,C;;cACI,UAAU,MAAV,E;;;AAApB,cAAO,I;;AACP,YAAK,OAAL,CAAa,EAAE,UAAU,MAAZ,EAAb;;;;;;;;;;;;;;;;;kBAGK,W;;;;OACD,S,EACA,S,EACA,M,EAEA,Q,EACA,G,EACA,M,EACA,O,EACA,M,EACA,K,EAOC,M,EACA,G,EAEA,G,EAGI,C;;;;;AAtBL,gB,GAAY,KAAK,KAAL,CAAW,UAAX,C;AACZ,gB,GAAY,KAAK,KAAL,CAAW,MAAX,C;AACZ,a,GAAS,KAAK,KAAL,CAAW,SAAX,C;AAET,e,GAAW,KAAK,GAAL,CAAS,UAAT,C;AACX,U,GAAM,KAAK,GAAL,CAAS,KAAT,C;AACN,a,GAAS,KAAK,GAAL,CAAS,QAAT,C;AACT,c,GAAU,KAAK,GAAL,CAAS,SAAT,C;AACV,a,GAAS,KAAK,GAAL,CAAS,QAAT,C;AACT,Y,GAAQ,KAAK,GAAL,CAAS,OAAT,C;;;;;AAOP,a,GAAS,E;AACT,U,GAAM,OAAO,KAAP,CAAa,GAAb,C;;cAEM,UAAU,KAAV,CAAgB,EAAC,KAAI,GAAL,EAAhB,EAA2B,KAA3B,E;;;AAAZ,U;AAGI,Q,GAAE,C;;;aAAG,IAAE,IAAI,M;;;;;;cACD,OAAO,KAAP,CAAa,EAAC,QAAO,IAAI,CAAJ,CAAR,EAAb,EAA8B,GAA9B,CAAkC,KAAlC,C;;;AAAjB,cAAO,CAAP,C;;;AAD0B,U;;;;;WAIvB,G;;;;;;YAEC,Q,EAiBA,Q;;;;;;mBAjBiB,UAAU,GAAV,CAAc;AAClC,uBAAU,QADwB;AAElC,qBAAO,MAF2B;AAGlC,kBAAK,GAH6B;AAIlC,sBAAQ,OAJ0B;AAKlC,oBAAM;AAL4B,aAAd,C;;;AAAjB,oB;;;;AASJ,gBAAI,OAAJ,CAAY,UAAS,IAAT,EAAc,CAAd,EAAgB;AAC3B,oBAAO,GAAP,CAAW;AACV,sBAAQ,QADE;AAEV,sBAAO,IAFG;AAGV,mBAAI,OAAO,CAAP,IAAU;AAHJ,cAAX;AAKA,aAND;;AAQI,oB,GAAW,UAAU,KAAV,CAAgB,EAAC,KAAI,GAAL,EAAhB,EAA2B,MAA3B,E;;;AAEf,mBAAK,OAAL,CAAa,EAAE,UAAS,MAAX,EAAb;;;;;;;;;;;;;;;AAEA,YAAK,IAAL,CAAU,GAAV,EAAe,OAAf;;;;;;;;;;AAID,YAAK,IAAL,CAAU,GAAV,EAAe,KAAf;;;;;;;;;;;;;;;;;kBAGI,S;;OACD,G,EACA,S,EAEC,Q;;;;;AAHD,U,GAAM,KAAK,GAAL,CAAS,KAAT,C;AACN,gB,GAAY,KAAK,KAAL,CAAW,UAAX,C;;AAChB,WAAI;AACC,gBADD,GACY,UAAU,KAAV,CAAgB,EAAC,KAAI,GAAL,EAAhB,EAA2B,MAA3B,EADZ;;AAEH,aAAK,OAAL,CAAa,EAAE,UAAS,MAAX,EAAb;AACA,QAHD,CAGC,OAAO,CAAP,EAAU;AACV,aAAK,IAAL,CAAU,GAAV,EAAe,KAAf;AACA",
    "file": "../../../src/user/controller/validate.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\n\nexport default class extends Base {\n  /**\n   * index action\n   * @return {Promise} []\n   */\n\tasync indexAction(){\n\t\t//auto render template file index_index.html\n\t\tlet user = await this.checkAuthor(this);\n\t\tif(user){\n\t\t\tthis.assign({ \n\t\t\t\tpage:\"validate\",\n\t\t\t\ttitle:\"工具验证\",\n\t\t\t\tuser:user\n\t\t\t})\n\t\t\treturn this.display();\n\t\t}\n\t}\n\tasync getvalidataAction() {\n\t\tlet  result = {};\n\t\tlet modelCate = this.model(\"CATE\");\n\t\tresult.cate = await modelCate.select();\n\n\t\tlet modelVali = this.model(\"TEMPLIST\");\n\t\tresult.list = await modelVali.select();\n\t\tthis.success({ \"result\": result });\n\t}\n\n\tasync storeAction() {\n\t\tlet modelTemp = this.model(\"TEMPLIST\");\n\t\tlet modelList = this.model(\"LIST\");\n\t\tlet coList = this.model(\"CONNECT\");\n\t\t\n\t\tvar toolName = this.get('toolName');\n\t\tvar url = this.get('url');\n\t\tvar imgUrl = this.get('imgUrl');\n\t\tvar profile = this.get('profile');\n\t\tvar cateId = this.get('cateId');\n\t\tvar email = this.get('email');\n\n\n\n\n\t\t//将得到的数据参数存储LIST中，获取toolId,并将分类信息存到CONNECT表中 将审核表中相应的记录删除\n\t\ttry {\n\t\t\tvar arrNum = [];\n\t\t\tvar arr = cateId.split(',');\n\n\t\t\tlet num = await modelList.where({url:url}).count();\n\n\t\t\n\t\t\tfor(var i=0; i<arr.length; i++){\n\t\t\t\tarrNum[i] =await coList.where({cateId:arr[i]}).max(\"num\");\n\t\t\t}\n\n\t\t\tif(!num){\n\t\t\t\t/* 将记录插入到LIST表中 */\n\t\t\t\tlet insertId = await modelList.add({\n\t\t\t\t\ttoolName: toolName,\n\t\t\t\t\timgUrl:imgUrl,\n\t\t\t\t\turl: url, \n\t\t\t\t\tprofile:profile,\n\t\t\t\t\temail:email\n\t\t\t\t});\n\n\t\t\t\t/* 将记录插入到CONNECT表中 并将默认将 */\n\t\t\t\tarr.forEach(function(item,i){\n\t\t\t\t\tcoList.add({\n\t\t\t\t\t\ttoolId: insertId,\n\t\t\t\t\t\tcateId:item,\n\t\t\t\t\t\tnum:arrNum[i]+1\n\t\t\t\t\t});\n\t\t\t\t})\n\n\t\t\t\tlet valiItem = modelTemp.where({url:url}).delete()\n\n\t\t\t\tthis.success({ \"result\":arrNum});\n\t\t\t}else{\n\t\t\t\tthis.fail(102, \"记录已存在\");\n\t\t\t}\n\n\t\t} catch (e) {\n\t\t\tthis.fail(102, \"未成功\");\n\t\t}\n\t}\n\tasync delAction() {\n\t\tvar url = this.get('url');\n\t\tlet modelTemp = this.model(\"TEMPLIST\");\n\t\ttry {\n\t\t\tlet valiItem = modelTemp.where({url:url}).delete();\n\t\t\tthis.success({ \"result\":\"删除成功\"});\n\t\t}catch (e) {\n\t\t\tthis.fail(102, \"未成功\");\n\t\t}\n\t\t\n\t}\n}"
    ]
}